#!/bin/env node
//Make a schema file in this directory, from the bare wyselib schema components.
//It is needed in order to build the DB used in the mocha tests.
//If you use the same DB name as the mocha test uses, and don't drop the DB (at the end),
//you can check for undocumented columns in the bootstrap schema.
//Otherwise, everything else will get checked (normally plenty good)

const { DatabaseName, DBAdmin } = require('./settings')	//Use the same one as the mocha tests
var databaseName = "wysemanSchemaDB"			//Use a different database name

const { execSync } = require('child_process')
const Fs = require('fs')
const Path = require('path')
//const wyselib = Path.join('..', 'node_modules', 'wyselib', 'schema')
const wyselib = Path.dirname(require.resolve('wyselib/schema/wylib.wmt'))

var opts = `--dbname=${databaseName} --user=${DBAdmin}`
var cmd, output
cmd = `wyseman ${opts} ${Path.join(wyselib, '*.wms')}  ${Path.join(wyselib, 'base', '*.wms')}`
output = execSync(cmd)
console.log("Building objects:", cmd)

cmd = `wyseman ${opts} ${Path.join(wyselib, '*.wmt')}  ${Path.join(wyselib, 'base', '*.wmt')}`
output = execSync(cmd)
console.log("Building text:", cmd)

cmd = `wyseman -s ${opts} ${Path.join(wyselib, 'base', '*.wmi')}`
output = execSync(cmd)
console.log("Building SQL:", cmd)

console.log("Writing sql file:")
Fs.writeFileSync('schema.sql', output)

//Drop our database when done
console.log("Dropping temporary database:", databaseName)
output = execSync(`dropdb -U ${DBAdmin} ` + databaseName)
