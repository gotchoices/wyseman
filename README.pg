-------------------------------------------------------------------------------
Current setup procedure for postgres out of the box on Fedora

- dnf install postgresql postgresql-server rubygem-pg

- As postgres user:
	initdb		(or as root: su -l postgres -c initdb)

- If postgres is on a separate server, edit pg_hba.conf as needed
- If connecting by various usernames, edit pg_ident.conf as needed

- As root:
	systemctl start postgresql
	systemctl status postgresql
	systemctl enable postgresql

- As postgres, create your database admin user(s):
	su -l postgres -c 'createuser -d -s -r <dba_username>'

- To run wysegi and other tcl stuff:
	dnf install tcl-pgtcl

-------------------------------------------------------------------------------
Older Installation notes for source installation of postgres 8.2 on Fedora 4:

0) grab the latest sources for postgres and pgtcl and save them in /tmp
http://www.postgresql.org/ftp/source/
http://pgfoundry.org/projects/pgtclng/

As root:

1) if not already done:
	groupadd -g 111 postgres
	adduser -u 111 -g 111 postgres

2) service postgres stop		#if previous version running

3) save backup of old database:
	cd /usr/local
	mv pgsql pgsql.old
	mkdir /usr/local/pgsql
	chown -R postgres.postgres /usr/local/pgsql

4) include in your environment:
	export PATH=$PATH:/usr/local/pgsql/bin
	export MANPATH=$MANPATH:/usr/local/pgsql/man
	export PGLIB=/usr/local/pgsql/lib
	export PGDATA=/usr/local/pgsql/data


5) build postgres from source
	cd /usr/src
	tar xzvf /tmp/postgresql-8.2.3.tar.gz
	cd postgresql-8.2.3

	./configure --with-tcl --with-odbc --enable-syslog
	make |tee make.log
	make install |tee make.install.log

6) Redo permissions
	chown -R postgres.postgres /usr/local/pgsql

7) add to /etc/ld.so.conf:
	/usr/local/pgsql/lib
	
	Then execute in a shell: ldconfig

8) As user postgres, execute: initdb

9) Configure postgres;
	Edit pgsql/data/postgresql.conf to make the following changes:

	listen_addresses = '*'			#connections over ethernet
	client_min_messages = warning		#less verbose
	default_with_oids = on			#dbe still uses these
	
	Many other parameters can also be tuned for better performance

10) Edit pg_hba.conf:
	Add which servers can connect to the database. An example using ident
	authentication for the 192.168.1.* subnet:

host    all         all          192.168.1.0/24     ident     sameuser

11) Edit pg_ident.conf:
	If you are going to use different ident user names and PostgreSQL user
        names you will need to create entries here to map between them. Other-
        wise leave this file alone.

12) If new start script available:
	In postgres source directory:
		cp contrib/start-scripts/linux /etc/rc.d/init.d/postgres

	Add to automatic start for levels 3 and 5:
		chkconfig --add postgres
		chkconfig --level 35 postgres on
		chmod +x /etc/rc.d/init.d/postgres
	
	Make sure identd is running (with encryption disabled)
	
	then:
		service postgres start
        
13) As postgres, create a dbadmin user:
	for existing linux user:
	    createuser -d -s -r <username>
	for new linux user:
	    groupadd -g 112 dba
	    adduser -u 112 -g 112 dba 
	    createuser -d -s -r dba
	    echo "export PATH=\$PATH:/usr/local/pgsql/bin" >> /home/dba/.bashrc

14) build pgtcl from source
        cd /usr/src
        tar xzvf /tmp/pgtcl1.6.0.tar.gz
        cd pgtcl1.6.0

	./configure
	make |tee pgtclmake.log
	make install |tee pgtclinstall.log
