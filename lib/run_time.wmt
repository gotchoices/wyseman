#Text descriptions for meta-data tables
#Copyright WyattERP.org; See license in root of this package
# -----------------------------------------------------------------------------

tabtext wm.releases	{Releases}	{Tracks the version number of each public release of the database design} {
    {release		{Release}	{The integer number of the release, starting with 1.  The current number in this field always designates a work-in-progress.  The number prior indicates the last public release.}}
    {committed		{Committed}	{When this release version was frozen as an official release.}}
    {sver_2		{BS Version}	{Dummy column with a name indicating the version of these bootstrap tables (which can't be managed by wyseman themselves).}}
}

tabtext wm.objects	{Objects}	{Keeps data on database tables, views, functions, etc. telling how to build or drop each object and how it relates to other objects in the database.} {
    {obj_typ		{Type}		{The object type, for example: table, function, trigger, etc.}}
    {obj_nam		{Name}		{The schema and name of object as known within that schema}}
    {obj_ver		{Version}	{A sequential integer showing how many times this object has been modified, as a part of an official release.  Changes to the current (working) release do not increment this number.}}
    {checkit		{Check}		{This record needs to have its dependencies and consistency checked}}
    {build		{Build}		{The object needs to be rebuilt according to an updated spec}}
    {built		{Built}		{The object represented by this record is built and current according to this create script}}
    {module		{Module}	{The name of a code module (package) this object belongs to}}
    {deps		{Depends}	{A list of un-expanded dependencies for this object, exactly as expressed in the source file}}
    {ndeps		{Normal Deps}	{An expanded and normalized array of dependencies, guaranteed to exist in another record of the table}}
    {grants		{Grants}	{The permission grants found, applicable to this object}}
    {col_data		{Display}	{Switches found, expressing preferred display characteristics for columns, assuming this is a view or table object}}
    {delta		{Deltas}	{JSON list of table alteration commands used when migrating from one table version to the next}}
    {del_idx		{Delta Index}	{Points to the next migration command that has not yet been deployed}}
    {crt_sql		{Create}	{The SQL code to build this object}}
    {drp_sql		{Drop}		{The SQL code to drop this object}}
    {min_rel		{Minimum}	{The oldest release this version of this object belongs to}}
    {max_rel		{Maximum}	{The latest release this version of this object belongs to}}
    {crt_date		{Created}	{When this object record was first created}}
    {mod_date		{Modified}	{When this object record was last modified}}
}

tabtext wm.objects_v	{Rel Objects}	{An enhanced view of the object table, expanded by showing the full object specifier, and each separate release this version of the object belongs to} {
    {object		{Object}	{Full type and name of this object}}
    {release		{Release}	{A release this version of the object belongs to}}
} -inherits wm.objects

tabtext wm.objects_v_depth {Dep Objects}	{An enhanced view of the object table, expanded by showing the full object specifier, each separate release this version of the object belongs to, and the maximum depth it is along any path in the dependency tree.} {
    {depth		{Max Depth}	{The maximum depth of this object along any path in the dependency tree}}
} -inherits wm.objects

tabtext wm.objects_v_dep {Dependencies}	{A recursive view showing which database objects depend on (must be created after) other database objects.} {
    {object		{Object}	{Full object type and name (type:name)}}
    {od_typ		{Type}		{Function, view, table, etc}}
    {od_nam		{Name}		{Schema and name of object as known within that schema}}
    {od_release		{Release}	{The release this object belongs to}}
    {cycle		{Cycle}		{Prevents the recursive view gets into an infinite loop}}
    {depend		{Depends On}	{Another object that must be created before this object}}
    {depth		{Depth}		{The depth of the dependency tree, when following this particular dependency back to the root.}}
    {path		{Path}		{The path of the dependency tree above this object}}
    {fpath		{Full Path}	{The full path of the dependency tree above this object (including this object).}}
}

tabtext wm.table_style	{Table Styles}	{Contains style flags to tell the GUI how to render each table or view} {
    {ts_sch		{Schema Name}	{The schema for the table this style pertains to}}
    {ts_tab		{Table Name}	{The name of the table this style pertains to}}
    {sw_name		{Name}		{The name of the style being described}}
    {sw_value		{Value}		{The value for this particular style}}
    {inherit		{Inherit}	{The value for this style can propagate to derivative views}}
}

tabtext wm.column_style	{Column Styles}	{Contains style flags to tell the GUI how to render the columns of a table or view} {
    {cs_sch		{Schema Name}	{The schema for the table this style pertains to}}
    {cs_tab		{Table Name}	{The name of the table containing the column this style pertains to}}
    {cs_col		{Column Name}	{The name of the column this style pertains to}}
    {sw_name		{Name}		{The name of the style being described}}
    {sw_value		{Value}		{The value for this particular style}}
}

tabtext wm.table_text	{Table Text}	{Contains a description of each table in the system} {
    {tt_sch		{Schema Name}	{The schema this table belongs to}}
    {tt_tab		{Table Name}	{The name of the table being described}}
    {language		{Language}	{The language this description is in}}
    {title		{Title}		{A short title for the table}}
    {help		{Description}	{A longer description of what the table is used for}}
}

tabtext wm.column_text	{Column Text}	{Contains a description for each column of each table in the system} {
    {ct_sch		{Schema Name}	{The schema this column's table belongs to}}
    {ct_tab		{Table Name}	{The name of the table this column is in}}
    {ct_col		{Column Name}	{The name of the column being described}}
    {language		{Language}	{The language this description is in}}
    {title		{Title}		{A short title for the column}}
    {help		{Description}	{A longer description of what the column is used for}}
}
    
tabtext wm.value_text	{Value Text}	{Contains a description for the values which certain columns may be set to.  Used only for columns that can be set to one of a finite set of values (like an enumerated type).} {
    {vt_sch		{Schema Name}	{The schema of the table the column belongs to}}
    {vt_tab		{Table Name}	{The name of the table this column is in}}
    {vt_col		{Column Name}	{The name of the column whose values are being described}}
    {value		{Value}		{The name of the value being described}}
    {language		{Language}	{The language this description is in}}
    {title		{Title}		{A short title for the value}}
    {help		{Description}	{A longer description of what it means when the column is set to this value}}
}

tabtext wm.message_text	{Message Text}	{Contains messages in a particular language to describe an error, or a widget feature or button} {
    {mt_sch		{Schema Name}	{The schema of the table this message belongs to}}
    {mt_tab		{Table Name}	{The name of the table this message belongs to is in}}
    {code		{Code}		{A unique code referenced in the source code to evoke this message in the language of choice}}
    {language		{Language}	{The language this message is in}}
    {title		{Title}		{A short version for the message, or its alert}}
    {help		{Description}	{A longer, more descriptive version of the message}}
}
    
tabtext wm.column_native {Native Columns} {Contains cached information about the tables and their columns which various higher level view columns derive from.  To query this directly from the information schema is somewhat slow, so wyseman caches it here when building the schema for faster access.} {
    {cnt_sch		{Schema Name}	{The schema of the table this column belongs to}}
    {cnt_tab		{Table Name}	{The name of the table this column is in}}
    {cnt_col		{Column Name}	{The name of the column whose native source is being described}}
    {nat_sch		{Schema Name}	{The schema of the native table the column derives from}}
    {nat_tab		{Table Name}	{The name of the table the column natively derives from}}
    {nat_col		{Column Name}	{The name of the column in the native table from which the higher level column derives}}
    {nat_exp		{Explic Native}	{The information about the native table in this record has been defined explicitly in the schema description (not derived from the database system catalogs)}}
    {pkey		{Primary Key}	{Wyseman can often determine the "primary key" for views on its own from the database.  When it can't, you have to define it explicitly in the schema.  This indicates that thiscolumn should be regarded as a primary key field when querying the view.}}
}

tabtext wm.table_data	{Table Data}	{Contains information from the system catalogs about views and tables in the system} {
    {td_sch		{Schema Name}	{The schema the table is in}}
    {td_tab		{Table Name}	{The name of the table being described}}
    {tab_kind		{Kind}		{Tells whether the relation is a table or a view}}
    {has_pkey		{Has Pkey}	{Indicates whether the table has a primary key defined in the database}}
    {obj		{Object Name}	{The table name, prefixed by the schema (namespace) name}}
    {cols		{Columns}	{Indicates how many columns are in the table}}
    {system		{System}	{True if the table/view is built in to PostgreSQL}}
}

tabtext wm.table_pub	{Tables}	{Joins information about tables from the system catalogs with the text descriptions defined in wyseman} {
    {sch		{Schema Name}	{The schema the table belongs to}}
    {tab		{Table Name}	{The name of the table being described}}
    {obj		{Object Name}	{The table name, prefixed by the schema (namespace) name}}
}

tabtext wm.view_column_usage {View Column Usage} {A version of a similar view in the information schema but faster.  For each view, tells what underlying table and column the view column uses.} {
    {view_catalog	{View Database}	{The database the view belongs to}}
    {view_schema	{View Schema}	{The schema the view belongs to}}
    {view_name		{View Name}	{The name of the view being described}}
    {table_catalog	{Table Database} {The database the underlying table belongs to}}
    {table_schema	{Table Schema}	{The schema the underlying table belongs to}}
    {table_name		{Table Name}	{The name of the underlying table}}
    {column_name	{Column Name}	{The name of the column in the view}}
}

tabtext wm.column_data	{Column Data}	{Contains information from the system catalogs about columns of tables in the system} {
    {cdt_sch		{Schema Name}	{The schema of the table this column belongs to}}
    {cdt_tab		{Table Name}	{The name of the table this column is in}}
    {cdt_col		{Column Name}	{The name of the column whose data is being described}}
    {field		{Field}		{The number of the column as it appears in the table}}
    {nonull		{Not Null}	{Indicates that the column is not allowed to contain a null value}}
    {length		{Length}	{The normal number of characters this item would occupy}}
    {type		{Data Type}	{The kind of data this column holds, such as integer, string, date, etc.}}
    {def		{Default}	{Default value for this column if none is explicitly assigned}}
    {tab_kind		{Table/View}	{The kind of database relation this column is in (r=table, v=view)}}
    {is_pkey		{Def Prim Key}	{Indicates that this column is defined as a primary key in the database (can be overridden by a wyseman setting)}}
}

tabtext wm.column_def	{Column Default} {A view used internally for initializing columns to their default value} {
    {val		{Init Value}	{An expression used for default initialization}}
}

tabtext wm.column_istyle {Column Styles} {A view of the default display styles for table and view columns} {
    {nat_value		{Native Style}	{The inherited style as specified by an ancestor object}}
    {cs_value		{Given Style}	{The style, specified explicitly for this object}}
    {cs_obj		{Object Name}	{The schema and table name this style applies to}}
}

tabtext wm.column_lang {Column language} {A view of descriptive language data as it applies to the columns of tables and views} {
    {sch		{Schema}	{The schema that holds the table or view this language data applies to}}
    {tab		{Table}		{The table or view this language data applies to}}
    {obj		{Object}	{The schema name and the table/view name}}
    {col		{Column}	{The name of the column the metadata applies to}}
    {values		{Values}	{A JSON description of the allowable values for this column}}
    {system		{System}	{Indicates if this table/view is built in to PostgreSQL}}
    {nat		{Native}	{The (possibly ancestor) schema and table/view this language information descends from}}
}

tabtext wm.column_meta {Column Metadata} {A view of data about the use and display of the columns of tables and views} {
    {sch		{Schema}	{The schema that holds the table or view this metadata applies to}}
    {tab		{Table}		{The table or view this metadata applies to}}
    {obj		{Object}	{The schema name and the table/view name}}
    {col		{Column}	{The name of the column the metadata applies to}}
    {values		{Values}	{An array of allowable values for this column}}
    {styles		{Styles}	{An array of default display styles for this column}}
    {nat		{Native}	{The (possibly ancestor) schema and table/view this metadata descends from}}
}

tabtext wm.table_lang {Table Language} {A view of titles and descriptions of database tables/views} {
    {messages		{Messages}	{Human readable messages the computer may generate in connection with this table/view}}
    {columns		{Columns}	{A JSON structure describing language information relevant to the columns in this table/view}}
    {obj		{Object}	{The schema and table/view}}
}

tabtext wm.table_meta {Table Metadata} {A view of data about the use and display of tables and views} {
    {fkeys		{Foreign Keys}	{A JSON structure containing information about the foreign keys pointed to by this table}}
    {obj		{Object}	{The schema and table/view}}
    {pkey		{Primary Key}	{A JSON array describing the primary key fields for this table/view}}
    {columns		{Columns}	{A JSON structure describing metadata information relevant to the columns in this table/view}}
}

tabtext wm.column_pub	{Columns}	{Joins information about table columns from the system catalogs with the text descriptions defined in wyseman} {
    {sch		{Schema Name}	{The schema of the table the column belongs to}}
    {tab		{Table Name}	{The name of the table that holds the column being described}}
    {col		{Column Name}	{The name of the column being described}}
    {obj		{Object Name}	{The table name, prefixed by the schema (namespace) name}}
    {nat		{Native Object}	{The name of the native table, prefixed by the native schema}}
    {language		{Language}	{The language of the included textual descriptions}}
    {title		{Title}		{A short title for the table}}
    {help		{Description}	{A longer description of what the table is used for}}
}

tabtext wm.fkeys_data	{Keys Data}		{Includes data from the system catalogs about how key fields in a table point to key fields in a foreign table.  Each key group is described on a separate row.} {
    {kst_sch		{Base Schema}		{The schema of the table that has the referencing key fields}}
    {kst_tab		{Base Table}		{The name of the table that has the referencing key fields}}
    {kst_cols		{Base Columns}		{The name of the columns in the referencing table's key}}
    {ksf_sch		{Foreign Schema}	{The schema of the table that is referenced by the key fields}}
    {ksf_tab		{Foreign Table}		{The name of the table that is referenced by the key fields}}
    {ksf_cols		{Foreign Columns}	{The name of the columns in the referenced table's key}}
    {conname		{Constraint}		{The name of the the foreign key constraint in the database}}
}

tabtext wm.fkeys_pub	{Keys}			{Public view to see foreign key relationships between views and tables and what their native underlying tables/columns are.  One row per key group.} {
    {tt_sch		{Schema}		{The schema of the table that has the referencing key fields}}
    {tt_tab		{Table}			{The name of the table that has the referencing key fields}}
    {tt_cols		{Columns}		{The name of the columns in the referencing table's key}}
    {tt_obj		{Object}		{Concatenated schema.table that has the referencing key fields}}
    {tn_sch		{Nat Schema}		{The schema of the native table that has the referencing key fields}}
    {tn_tab		{Nat Table}		{The name of the native table that has the referencing key fields}}
    {tn_cols		{Nat Columns}		{The name of the columns in the native referencing table's key}}
    {tn_obj		{Nat Object}		{Concatenated schema.table for the native table that has the referencing key fields}}
    {ft_sch		{For Schema}		{The schema of the table that is referenced by the key fields}}
    {ft_tab		{For Table}		{The name of the table that is referenced by the key fields}}
    {ft_cols		{For Columns}		{The name of the columns referenced by the key}}
    {ft_obj		{For Object}		{Concatenated schema.table for the table that is referenced by the key fields}}
    {fn_sch		{For Nat Schema}	{The schema of the native table that is referenced by the key fields}}
    {fn_tab		{For Nat Table}		{The name of the native table that is referenced by the key fields}}
    {fn_cols		{For Nat Columns}	{The name of the columns in the native referenced by the key}}
    {fn_obj		{For Nat Object}	{Concatenated schema.table for the native table that is referenced by the key fields}}
}
    
tabtext wm.fkey_data	{Key Data}		{Includes data from the system catalogs about how key fields in a table point to key fields in a foreign table.  Each separate key field is listed as a separate row.} {
    {kyt_sch		{Base Schema}		{The schema of the table that has the referencing key fields}}
    {kyt_tab		{Base Table}		{The name of the table that has the referencing key fields}}
    {kyt_col		{Base Columns}		{The name of the column in the referencing table's key}}
    {kyt_field		{Base Field}		{The number of the column in the referencing table's key}}
    {kyf_sch		{Foreign Schema}	{The schema of the table that is referenced by the key fields}}
    {kyf_tab		{Foreign Table}		{The name of the table that is referenced by the key fields}}
    {kyf_col		{Foreign Columns}	{The name of the columns in the referenced table's key}}
    {kyf_field		{Foreign Field}		{The number of the column in the referenced table's key}}
    {key		{Key}			{The number of which field of a compound key this record describes}}
    {keys		{Keys}			{The total number of columns used for this foreign key}}
    {conname		{Constraint}		{The name of the the foreign key constraint in the database}}
}
    
tabtext wm.fkey_pub	{Key Info}		{Public view to see foreign key relationships between views and tables and what their native underlying tables/columns are.  One row per key column.} {
    {tt_sch		{Schema}		{The schema of the table that has the referencing key fields}}
    {tt_tab		{Table}			{The name of the table that has the referencing key fields}}
    {tt_col		{Column}		{The name of the column in the referencing table's key component}}
    {tt_obj		{Object}		{Concatenated schema.table that has the referencing key fields}}
    {tn_sch		{Nat Schema}		{The schema of the native table that has the referencing key fields}}
    {tn_tab		{Nat Table}		{The name of the native table that has the referencing key fields}}
    {tn_col		{Nat Column}		{The name of the column in the native referencing table's key component}}
    {tn_obj		{Nat Object}		{Concatenated schema.table for the native table that has the referencing key fields}}
    {ft_sch		{For Schema}		{The schema of the table that is referenced by the key fields}}
    {ft_tab		{For Table}		{The name of the table that is referenced by the key fields}}
    {ft_col		{For Column}		{The name of the column referenced by the key component}}
    {ft_obj		{For Object}		{Concatenated schema.table for the table that is referenced by the key fields}}
    {fn_sch		{For Nat Schema}	{The schema of the native table that is referenced by the key fields}}
    {fn_tab		{For Nat Table}		{The name of the native table that is referenced by the key fields}}
    {fn_col		{For Nat Column}	{The name of the column in the native referenced by the key component}}
    {fn_obj		{For Nat Object}	{Concatenated schema.table for the native table that is referenced by the key fields}}
    {unikey		{Unikey}		{Used to differentiate between multiple fkeys pointing to the same destination, and multi-field fkeys pointing to multi-field destinations}}
}
    
tabtext wm.role_members	{Role Members}	{Summarizes information from the system catalogs about members of various defined roles} {
    {role		{Role}		{The name of a role}}
    {member		{Member}	{The username of a member of the named role}}
    {priv		{Privilege}	{The privilege this role relates to}}
    {level		{Level}		{What level this role has in the privilge}}
}

tabtext wm.column_ambig	{Ambiguous Columns} {A view showing view and their columns for which no definitive native table and column can be found automatically} {
    {sch		{Schema}	{The name of the schema this view is in}}
    {tab		{Table}		{The name of the view}}
    {col		{Column}	{The name of the column within the view}}
    {spec		{Specified}	{True if the definitive native table has been specified explicitly in the schema definition files}}
    {count		{Count}		{The number of possible native tables for this column}}
    {natives		{Natives}	{A list of the possible native tables for this column}}
}
